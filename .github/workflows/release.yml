name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        EXT=""
        if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi
        go build -ldflags='-s -w' -o dist/go-sneck-${GOOS}-${GOARCH}${EXT}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: go-sneck-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Display downloaded files (debug)
        run: ls -R ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          